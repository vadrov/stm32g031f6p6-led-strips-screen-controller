/*
 * bmp.h
 *
 *      Author: VadRov
 */

#ifndef INC_BMP_H_
#define INC_BMP_H_

#include "main.h"

#define BI_RGB	0

#pragma pack(push, 1) //выравнивание 1 байт
typedef struct {
	uint16_t bfType;					//Отметка для отличия формата от других (сигнатура формата). Может содержать единственное значение 4D42/424D (little-endian/big-endian).
	uint32_t bfSize;					//Размер файла в байтах.
	uint16_t bfReserved1;				//Зарезервировано и должно содержать ноль.
	uint16_t bfReserved2;				//Зарезервировано и должно содержать ноль.
	uint32_t bfOffBits;					//Положение пиксельных данных относительно начала данной структуры (в байтах).
	uint32_t biSize;					//Размер данной структуры в байтах, указывающий также на версию структуры
										//12 - CORE версия, 40 - третья версия, 108 - четвертая версия, 124 - 5 версия.
	int32_t  biWidth;					//Ширина растра в пикселях. Указывается целым числом со знаком. Ноль и отрицательные не документированы.
	int32_t  biHeight;					//Целое число со знаком, содержащее два параметра: высота растра в пикселях (абсолютное значение числа) и
										//порядок следования строк в двумерных массивах (знак числа). Нулевое значение не документировано.
										//В памяти эти строки записываются по порядку, но при положительном Height: начиная с самой нижней, а при отрицательном: с самой верхней.
										//Внутри каждоой строки пиксели записываются строго только от левого к правому.
	uint16_t biPlanes;					//В BMP допустимо только значение 1. Это поле используется в значках и курсорах Windows.
	uint16_t biBitCount;				//Количество бит на пиксель.
	uint32_t biCompression;				//Указывает на способ хранения пикселей.
	uint32_t biSizeImage;				//Размер пиксельных данных в байтах. Может быть обнулено если хранение осуществляется двумерным массивом.
	int32_t  biXPelsPerMeter;			//Количество пикселей на метр по горизонтали.
	int32_t  biYPelsPerMeter;			//Количество пикселей на метр по вертикали.
	uint32_t biClrUsed;					//Размер таблицы цветов в ячейках.
	uint32_t biClrImportant;			//Количество ячеек от начала таблицы цветов до последней используемой (включая её саму).
} bmpinfo; //размер структуры 54 байта для версии 3
#pragma pack(pop) //выключаем выравнивание 1 байт

#endif /* INC_BMP_H_ */
