/**
 ******************************************************************************
  * @file    user_diskio_spi.h
  * @brief   This file contains the common defines and functions prototypes for
  *          the user_diskio_spi driver implementation
  ******************************************************************************
  * Portions copyright (C) 2014, ChaN, all rights reserved.
  * Portions copyright (C) 2017, kiwih, all rights reserved.
  *
  * This software is a free software and there is NO WARRANTY.
  * No restriction on use. You can use, modify and redistribute it for
  * personal, non-profit or commercial products UNDER YOUR RESPONSIBILITY.
  * Redistributions of source code must retain the above copyright notice.
  *
  ******************************************************************************
  *  Portions copyright (C) 2019, VadRov, all right reserved.
  *  низкоуровневый драйвер для работы с SD картой по SPI, в том числе с DMA
  *  Модифицировано: 2019, VadRov
  *  версия 1.1 (NO_HAL)
  *
  *  https://zen.yandex.ru/vadrov
  *  https://www.youtube.com/c/VadRov
  *  https://vk.com/vadrov
  */

#ifndef _USER_DISKIO_SPI_H
#define _USER_DISKIO_SPI_H

#include "diskio.h" //from FatFs middleware library

//we define these as inline because we don't want them to be actual function calls (they get "called" from the cubemx autogenerated user_diskio file)
//we define them as extern because they are defined in a separate .c file to user_diskio.c (which #includes this .h file)

extern DSTATUS USER_SPI_initialize (BYTE pdrv);
extern DSTATUS USER_SPI_status (BYTE pdrv);
extern DRESULT USER_SPI_read (BYTE pdrv, BYTE *buff, LBA_t sector, UINT count);
extern DRESULT USER_SPI_write (BYTE pdrv, const BYTE *buff, LBA_t sector, UINT count);
extern DRESULT USER_SPI_ioctl (BYTE pdrv, BYTE cmd, void *buff);

#endif
